// Generated by BUCKLESCRIPT VERSION 1.9.2, PLEASE EDIT WITH CARE
'use strict';

var Fs          = require("fs");
var Char        = require("bs-platform/lib/js/char.js");
var $$Array     = require("bs-platform/lib/js/array.js");
var $$String    = require("bs-platform/lib/js/string.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");

function convertCmi(cmiFileName, jsFileName) {
  var cmiContent = Fs.readFileSync(cmiFileName, "binary");
  var cmiLength = cmiContent.length;
  var arrayStr1 = $$Array.init(256, (function (i) {
          return $$String.make(1, Char.chr(i));
        }));
  var arrayConv = $$Array.init(16, (function (i) {
          return $$String.make(1, Caml_string.get("0123456789abcdef", i));
        }));
  var fd = Fs.openSync(jsFileName, "a");
  Fs.writeSync(fd, $$String.make(1, /* "\"" */34));
  for(var i = 0 ,i_finish = cmiLength - 1 | 0; i <= i_finish; ++i){
    var c = Caml_string.get(cmiContent, i);
    var exit = 0;
    if (c >= 32) {
      if (c >= 127) {
        if (c >= 128) {
          Fs.writeSync(fd, "\\x");
          Fs.writeSync(fd, arrayConv[(c >>> 4)]);
          Fs.writeSync(fd, arrayConv[c & 15]);
        } else {
          exit = 1;
        }
      } else if (c !== 92) {
        if (c === /* "\"" */34) {
          Fs.writeSync(fd, "\\");
          Fs.writeSync(fd, arrayStr1[c]);
        } else {
          Fs.writeSync(fd, arrayStr1[c]);
        }
      } else {
        Fs.writeSync(fd, "\\\\");
      }
    } else if (c >= 14) {
      exit = 1;
    } else {
      switch (c) {
        case 0 : 
            if (i === (cmiLength - 1 | 0) || Caml_string.get(cmiContent, i + 1 | 0) < /* "0" */48 || Caml_string.get(cmiContent, i + 1 | 0) > /* "9" */57) {
              Fs.writeSync(fd, "\\0");
            } else {
              exit = 1;
            }
            break;
        case 8 : 
            Fs.writeSync(fd, "\\b");
            break;
        case 9 : 
            Fs.writeSync(fd, "\\t");
            break;
        case 10 : 
            Fs.writeSync(fd, "\\n");
            break;
        case 1 : 
        case 2 : 
        case 3 : 
        case 4 : 
        case 5 : 
        case 6 : 
        case 7 : 
        case 11 : 
            exit = 1;
            break;
        case 12 : 
            Fs.writeSync(fd, "\\f");
            break;
        case 13 : 
            Fs.writeSync(fd, "\\r");
            break;
        
      }
    }
    if (exit === 1) {
      Fs.writeSync(fd, "\\x");
      Fs.writeSync(fd, arrayConv[(c >>> 4)]);
      Fs.writeSync(fd, arrayConv[c & 15]);
    }
    
  }
  Fs.writeSync(fd, $$String.make(1, /* "\"" */34));
  Fs.closeSync(fd);
  return /* () */0;
}

exports.convertCmi = convertCmi;
/* fs Not a pure module */
